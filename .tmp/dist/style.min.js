/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./source/stylesheets/site.scss":
/*!**************************************!*\
  !*** ./source/stylesheets/site.scss ***!
  \**************************************/
/***/ (() => {

eval("throw new Error(\"Module build failed (from ./node_modules/mini-css-extract-plugin/dist/loader.js):\\nModuleError: Module Error (from ./node_modules/sass-loader/dist/cjs.js):\\nMissing binding /home/ramon_bloom_solutions/src/bloom/bloom-solutions.github.io/node_modules/node-sass/vendor/linux-x64-72/binding.node\\nNode Sass could not find a binding for your current environment: Linux 64-bit with Node.js 12.x\\n\\nFound bindings for the following environments:\\n  - OS X Unsupported architecture (arm64) with Node.js 15.x\\n\\nThis usually happens because your environment has changed since running `npm install`.\\nRun `npm rebuild node-sass` to download the binding for your current environment.\\n    at Object.emitError (/home/ramon_bloom_solutions/src/bloom/bloom-solutions.github.io/node_modules/webpack/lib/NormalModule.js:524:6)\\n    at getSassImplementation (/home/ramon_bloom_solutions/src/bloom/bloom-solutions.github.io/node_modules/sass-loader/dist/utils.js:55:21)\\n    at Object.loader (/home/ramon_bloom_solutions/src/bloom/bloom-solutions.github.io/node_modules/sass-loader/dist/index.js:27:59)\");\n\n//# sourceURL=webpack://blog/./source/stylesheets/site.scss?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module doesn't tell about it's top-level declarations so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./source/stylesheets/site.scss"]();
/******/ 	
/******/ })()
;